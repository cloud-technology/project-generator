/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.ct.builder.interfaces.rest;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-06-07T17:55:09.616740+08:00[Asia/Taipei]")
@Validated
@Tag(name = "Project", description = "the Project API")
public interface ProjectApi {

    /**
     * POST /project : create project
     * 建立專案
     *
     * @param type 編譯工具 (required)
     * @param groupId  (required)
     * @param artifactId  (required)
     * @param name  (optional)
     * @param description  (optional)
     * @param packageName package 根路徑 (optional, default to com.example.demo)
     * @param jvmVersion  (optional)
     * @param openAPIFile OpenAPI 檔案 (optional)
     * @param dbUrl  (optional)
     * @param dbUsername  (optional)
     * @param dbPassword  (optional)
     * @param runtime  (optional)
     * @return Created (status code 201)
     */
    @Operation(
        operationId = "createProject",
        summary = "create project",
        tags = { "Project" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Created", content = {
                @Content(mediaType = "application/zip", schema = @Schema(implementation = Object.class)),
                @Content(mediaType = "application/json", schema = @Schema(implementation = Object.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/project",
        produces = MediaType.APPLICATION_OCTET_STREAM_VALUE,
        consumes = MediaType.MULTIPART_FORM_DATA_VALUE
    )
    ResponseEntity<Object> createProject(
        @Parameter(name = "type", description = "編譯工具", required = true, example = "gradle") @Valid @RequestParam(value = "type", required = true) String type,
        @Parameter(name = "groupId", description = "", required = true) @Valid @RequestParam(value = "groupId", required = true) String groupId,
        @Parameter(name = "artifactId", description = "", required = true) @Valid @RequestParam(value = "artifactId", required = true) String artifactId,
        @Parameter(name = "name", description = "") @Valid @RequestParam(value = "name", required = false) String name,
        @Parameter(name = "description", description = "") @Valid @RequestParam(value = "description", required = false) String description,
        @Parameter(name = "packageName", description = "package 根路徑") @Valid @RequestParam(value = "packageName", required = false) String packageName,
        @Parameter(name = "jvmVersion", description = "") @Valid @RequestParam(value = "jvmVersion", required = false) String jvmVersion,
        @Parameter(name = "openAPIFile", description = "OpenAPI 檔案") @RequestPart(value = "openAPIFile", required = false) MultipartFile openAPIFile,
        @Parameter(name = "dbUrl", description = "") @Valid @RequestParam(value = "dbUrl", required = false) String dbUrl,
        @Parameter(name = "dbUsername", description = "") @Valid @RequestParam(value = "dbUsername", required = false) String dbUsername,
        @Parameter(name = "dbPassword", description = "") @Valid @RequestParam(value = "dbPassword", required = false) String dbPassword,
        @Parameter(name = "runtime", description = "") @Valid @RequestParam(value = "runtime", required = false) String runtime
    ) throws Exception;

}
