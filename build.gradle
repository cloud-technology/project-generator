plugins {
  id 'java'
  id 'org.springframework.boot' version '3.0.1'
  id 'io.spring.dependency-management' version '1.1.0'
//   id 'org.springframework.experimental.aot' version '0.12.1'
}


group = 'io.github.cloud-technology'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	// 因為 openapi 有包此套件, 故排除
	implementation.exclude group: 'org.slf4j', module: 'slf4j-simple'
}

repositories {
	// maven { url 'https://repo.spring.io/release' }
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.0")
	set('testcontainersVersion', "1.17.3") // https://search.maven.org/artifact/org.testcontainers/testcontainers-bom
	set('openapiGeneratorVersion', "6.0.1") // https://search.maven.org/artifact/org.openapitools/openapi-generator
	set('jooqVersion', "3.17.6") // https://search.maven.org/search?q=a:jooq-parent
	set('liquibaseCoreVersion', "4.18.0") // https://search.maven.org/artifact/org.liquibase/liquibase-core
	set('springdocVersion', "1.6.11") // https://search.maven.org/artifact/org.springdoc/springdoc-openapi-ui
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//
	implementation "org.openapitools:openapi-generator:${openapiGeneratorVersion}"
	//
	implementation "org.jooq:jooq:${jooqVersion}"
	implementation "org.jooq:jooq-meta:${jooqVersion}"
	implementation "org.jooq:jooq-codegen:${jooqVersion}"
	// https://search.maven.org/artifact/jakarta.xml.bind/jakarta.xml.bind-api
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
	implementation "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
	implementation "org.springdoc:springdoc-openapi-ui:${springdocVersion}"
	// implementation "org.springdoc:springdoc-openapi-native:${springdocVersion}"
	//
	testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
	// UnitTest
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
}

// tasks.named('bootBuildImage') {
//   builder = 'paketobuildpacks/builder:tiny'
//   environment = [
// 	'BP_NATIVE_IMAGE': 'true'
//   ]
// }

// graalvmNative {
//     binaries {
//         main {
//             buildArgs "-H:IncludeResources=\"templates/project/application-gcp.yml.mustache\""
//         }
//     }
// }